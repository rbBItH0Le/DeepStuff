# -*- coding: utf-8 -*-
"""ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/169wcrTvuEBXYvRkvJvcL_QYoZiEbf5bS
"""

import tensorflow as tf
import pandas as pd
import numpy as np

df=pd.read_csv('Churn_Modelling.csv')

df.head()

X=df.iloc[:,3:-1]

X

y=df.iloc[:,-1]

y

geo=pd.get_dummies(X['Geography'],drop_first=True)

X=pd.concat([X,geo],axis=1)

X

X.drop(['Geography'],axis=1,inplace=True)

X

sex=pd.get_dummies(X['Gender'],drop_first=True)

X=pd.concat([X,sex],axis=1)

X.drop(['Gender'],axis=1,inplace=True)

X

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

from sklearn.preprocessing import StandardScaler

sc=StandardScaler()

X_train=sc.fit_transform(X_train)

X_test=sc.fit_transform(X_test)

X_train

ann=tf.keras.models.Sequential()

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

ann.add(tf.keras.layers.Dense(units=1,activation='sigmoid'))

ann.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

ann.fit(X_train,y_train,batch_size=32,epochs=100)

pred=ann.predict(X_test)

pred=(pred>0.5)

from sklearn.metrics import accuracy_score

accuracy_score(y_test,pred)

